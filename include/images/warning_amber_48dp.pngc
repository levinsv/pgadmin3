#ifndef WARNING_AMBER_48DP_PNG_H
#define WARNING_AMBER_48DP_PNG_H

static const unsigned char warning_amber_48dp_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x60, 0xdc, 0x09, 
0xb5, 0x00, 0x00, 0x00, 0x20, 0x63, 0x48, 0x52, 
0x4d, 0x00, 0x00, 0x7a, 0x26, 0x00, 0x00, 0x80, 
0x84, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0x80, 
0xe8, 0x00, 0x00, 0x75, 0x30, 0x00, 0x00, 0xea, 
0x60, 0x00, 0x00, 0x3a, 0x98, 0x00, 0x00, 0x17, 
0x70, 0x9c, 0xba, 0x51, 0x3c, 0x00, 0x00, 0x00, 
0x90, 0x50, 0x4c, 0x54, 0x45, 0xff, 0xc1, 0x07, 
0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 
0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 
0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 
0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 
0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 
0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 
0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 
0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 
0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 
0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 
0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 
0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 
0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 
0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 
0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 
0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 
0x07, 0xff, 0xc1, 0x07, 0xff, 0xc1, 0x07, 0xff, 
0xc1, 0x07, 0xff, 0xff, 0xff, 0xdb, 0x67, 0x40, 
0xe1, 0x00, 0x00, 0x00, 0x2e, 0x74, 0x52, 0x4e, 
0x53, 0x00, 0x4a, 0x05, 0xd9, 0xd8, 0x73, 0x72, 
0x16, 0xf0, 0x15, 0x9b, 0x9a, 0x32, 0xfd, 0x31, 
0xc3, 0xc2, 0x58, 0x57, 0x09, 0xe2, 0xe1, 0x80, 
0x7f, 0x1e, 0xf6, 0x1d, 0xa9, 0xa8, 0x3d, 0x3c, 
0x02, 0xce, 0xcd, 0x65, 0x64, 0x0f, 0xea, 0xe9, 
0x8e, 0x8d, 0x27, 0xfa, 0x26, 0xb6, 0xb5, 0x29, 
0xe1, 0x4f, 0x6b, 0x00, 0x00, 0x00, 0x01, 0x62, 
0x4b, 0x47, 0x44, 0x2f, 0x23, 0xd4, 0x20, 0x11, 
0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 
0x00, 0x00, 0x0b, 0x13, 0x00, 0x00, 0x0b, 0x13, 
0x01, 0x00, 0x9a, 0x9c, 0x18, 0x00, 0x00, 0x00, 
0xf5, 0x49, 0x44, 0x41, 0x54, 0x48, 0xc7, 0xed, 
0x93, 0xc9, 0x12, 0x82, 0x30, 0x10, 0x05, 0x01, 
0x45, 0x71, 0x05, 0x71, 0xc5, 0x0d, 0x15, 0xdc, 
0xf5, 0xfd, 0xff, 0xe7, 0x29, 0x8a, 0x08, 0x61, 
0x92, 0x0c, 0x57, 0xcb, 0x3e, 0x4d, 0x55, 0x5e, 
0x1f, 0x72, 0x68, 0xc3, 0xf8, 0x5d, 0x4c, 0xb3, 
0xda, 0xde, 0xaa, 0xd5, 0xad, 0x4a, 0x82, 0x0d, 
0x34, 0xaa, 0xec, 0x9b, 0x0e, 0xe0, 0xb4, 0x2a, 
0x08, 0x6d, 0x3c, 0xe9, 0xf0, 0xf7, 0xdd, 0x5e, 
0x22, 0xf4, 0xfa, 0x6c, 0xc1, 0xc5, 0x0b, 0x8f, 
0xbb, 0x1f, 0x20, 0xc5, 0xe7, 0xed, 0x87, 0xa3, 
0x8f, 0x30, 0x1e, 0xb2, 0x84, 0x09, 0x32, 0xa6, 
0x9c, 0xfd, 0x2c, 0xf8, 0x0a, 0xc1, 0x9c, 0x21, 
0x2c, 0x90, 0x63, 0xa9, 0xdf, 0xaf, 0x50, 0x60, 
0xad, 0xdb, 0x87, 0x9b, 0xa2, 0xb0, 0x0d, 0x35, 
0xc2, 0x0e, 0x02, 0x91, 0x7a, 0x1f, 0xef, 0x45, 
0xe1, 0x10, 0x2b, 0x85, 0x63, 0x3a, 0x4b, 0xee, 
0xf4, 0x3c, 0xa9, 0xf6, 0xe7, 0x4b, 0x59, 0xb8, 
0x5c, 0x15, 0xc2, 0x0d, 0x65, 0x01, 0x77, 0x45, 
0x97, 0xa0, 0x04, 0x98, 0xf2, 0x2e, 0x69, 0x41, 
0x5a, 0xab, 0x0d, 0x5a, 0x90, 0xd5, 0x9a, 0x74, 
0x49, 0x0b, 0x92, 0x5a, 0xdb, 0x90, 0x09, 0x74, 
0xad, 0xef, 0x2e, 0x69, 0xc8, 0x5a, 0x5d, 0x28, 
0xf0, 0x14, 0x5d, 0xd2, 0xf8, 0xf2, 0x2e, 0x69, 
0x4a, 0xb5, 0x4e, 0x8a, 0xef, 0xc2, 0xa7, 0xcb, 
0xb5, 0xe6, 0xbb, 0xa4, 0x05, 0xa1, 0xd6, 0x05, 
0x74, 0x42, 0xb1, 0xd6, 0x15, 0xf4, 0x42, 0xbe, 
0x56, 0xb1, 0x4b, 0x9a, 0x5c, 0xad, 0x3b, 0xb0, 
0x88, 0xe4, 0x5d, 0xd2, 0x64, 0xb5, 0x1e, 0xc1, 
0xe4, 0x24, 0x74, 0xa9, 0x25, 0xad, 0xf5, 0x06, 
0x36, 0x77, 0xe3, 0x0f, 0x8b, 0x07, 0x57, 0xd6, 
0x8d, 0x5d, 0x2c, 0xc0, 0xb6, 0xeb, 0x00, 0x00, 
0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 
0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *warning_amber_48dp_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_warning_amber_48dp_png = new wxImage();
	if (!img_warning_amber_48dp_png || !img_warning_amber_48dp_png->IsOk())
	{
		wxMemoryInputStream img_warning_amber_48dp_pngIS(warning_amber_48dp_png_data, sizeof(warning_amber_48dp_png_data));
		img_warning_amber_48dp_png->LoadFile(img_warning_amber_48dp_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_warning_amber_48dp_png;
}
#define warning_amber_48dp_png_img warning_amber_48dp_png_img()

static wxBitmap *warning_amber_48dp_png_bmp()
{
	static wxBitmap *bmp_warning_amber_48dp_png;
	if (!bmp_warning_amber_48dp_png || !bmp_warning_amber_48dp_png->IsOk())
		bmp_warning_amber_48dp_png = new wxBitmap(*warning_amber_48dp_png_img);
	return bmp_warning_amber_48dp_png;
}
#define warning_amber_48dp_png_bmp warning_amber_48dp_png_bmp()

static wxIcon *warning_amber_48dp_png_ico()
{
	static wxIcon *ico_warning_amber_48dp_png;
	if (!ico_warning_amber_48dp_png || !ico_warning_amber_48dp_png->IsOk())
	{
		ico_warning_amber_48dp_png = new wxIcon();
		ico_warning_amber_48dp_png->CopyFromBitmap(*warning_amber_48dp_png_bmp);
	}
	return ico_warning_amber_48dp_png;
}
#define warning_amber_48dp_png_ico warning_amber_48dp_png_ico()

#endif // WARNING_AMBER_48DP_PNG_H
